=begin
#EVE Swagger Interface

#An OpenAPI for EVE Online

The version of the OpenAPI document: 1.12

Generated by: https://openapi-generator.tech
OpenAPI Generator version: 6.0.1

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for RubyEveesiClient::GetCorporationsCorporationIdStarbasesStarbaseIdOk
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe RubyEveesiClient::GetCorporationsCorporationIdStarbasesStarbaseIdOk do
  let(:instance) { RubyEveesiClient::GetCorporationsCorporationIdStarbasesStarbaseIdOk.new }

  describe 'test an instance of GetCorporationsCorporationIdStarbasesStarbaseIdOk' do
    it 'should create an instance of GetCorporationsCorporationIdStarbasesStarbaseIdOk' do
      expect(instance).to be_instance_of(RubyEveesiClient::GetCorporationsCorporationIdStarbasesStarbaseIdOk)
    end
  end
  describe 'test attribute "allow_alliance_members"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "allow_corporation_members"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "anchor"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.anchor = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "attack_if_at_war"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "attack_if_other_security_status_dropping"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "attack_security_status_threshold"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "attack_standing_threshold"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "fuel_bay_take"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.fuel_bay_take = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "fuel_bay_view"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.fuel_bay_view = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "fuels"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  describe 'test attribute "offline"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.offline = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "online"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.online = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "unanchor"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["alliance_member", "config_starbase_equipment_role", "corporation_member", "starbase_fuel_technician_role"])
      # validator.allowable_values.each do |value|
      #   expect { instance.unanchor = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "use_alliance_standings"' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
